// WARNING: DO NOT EDIT THIS FILE. THIS FILE IS MANAGED BY SPRING ROO.
// You may push code into the target .java compilation unit if you wish to edit any member(s).

package com.dw.roo.conference.web;

import com.dw.roo.conference.domain.Speaker;
import com.dw.roo.conference.domain.Talk;
import java.lang.String;
import org.springframework.core.convert.converter.Converter;
import org.springframework.format.FormatterRegistry;

privileged aspect ApplicationConversionServiceFactoryBean_Roo_ConversionService {
    
    Converter<Speaker, String> ApplicationConversionServiceFactoryBean.getSpeakerConverter() {
        return new Converter<Speaker, String>() {
            public String convert(Speaker source) {
                return new StringBuilder().append(source.getFirstname()).append(" ").append(source.getLastname()).append(" ").append(source.getEmail()).toString();
            }
        };
    }
    
    Converter<Talk, String> ApplicationConversionServiceFactoryBean.getTalkConverter() {
        return new Converter<Talk, String>() {
            public String convert(Talk source) {
                return new StringBuilder().append(source.getTitle()).append(" ").append(source.getDescription()).append(" ").append(source.getSpeaker()).toString();
            }
        };
    }
    
    public void ApplicationConversionServiceFactoryBean.installLabelConverters(FormatterRegistry registry) {
        registry.addConverter(getSpeakerConverter());
        registry.addConverter(getTalkConverter());
    }
    
    public void ApplicationConversionServiceFactoryBean.afterPropertiesSet() {
        super.afterPropertiesSet();
        installLabelConverters(getObject());
    }
    
}
